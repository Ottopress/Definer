// Code generated by protoc-gen-go.
// source: communication.proto
// DO NOT EDIT!

package packets

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Packet_Header_Type int32

const (
	Packet_Header_REQUEST  Packet_Header_Type = 0
	Packet_Header_RESPONSE Packet_Header_Type = 1
	Packet_Header_PASSIVE  Packet_Header_Type = 2
)

var Packet_Header_Type_name = map[int32]string{
	0: "REQUEST",
	1: "RESPONSE",
	2: "PASSIVE",
}
var Packet_Header_Type_value = map[string]int32{
	"REQUEST":  0,
	"RESPONSE": 1,
	"PASSIVE":  2,
}

func (x Packet_Header_Type) String() string {
	return proto.EnumName(Packet_Header_Type_name, int32(x))
}
func (Packet_Header_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0, 0} }

type Packet struct {
	Header *Packet_Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*Packet_Intro
	//	*Packet_RouterConfigReq
	//	*Packet_ErrorResponse
	//	*Packet_DeviceTransfer
	//	*Packet_Command
	Body isPacket_Body `protobuf_oneof:"body"`
}

func (m *Packet) Reset()                    { *m = Packet{} }
func (m *Packet) String() string            { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()               {}
func (*Packet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isPacket_Body interface {
	isPacket_Body()
}

type Packet_Intro struct {
	Intro *IntroductionPassive `protobuf:"bytes,2,opt,name=intro,oneof"`
}
type Packet_RouterConfigReq struct {
	RouterConfigReq *RouterConfigurationRequest `protobuf:"bytes,3,opt,name=routerConfigReq,oneof"`
}
type Packet_ErrorResponse struct {
	ErrorResponse *GeneralErrorResponse `protobuf:"bytes,5,opt,name=errorResponse,oneof"`
}
type Packet_DeviceTransfer struct {
	DeviceTransfer *DeviceTransferPassive `protobuf:"bytes,6,opt,name=deviceTransfer,oneof"`
}
type Packet_Command struct {
	Command *Command `protobuf:"bytes,99,opt,name=command,oneof"`
}

func (*Packet_Intro) isPacket_Body()           {}
func (*Packet_RouterConfigReq) isPacket_Body() {}
func (*Packet_ErrorResponse) isPacket_Body()   {}
func (*Packet_DeviceTransfer) isPacket_Body()  {}
func (*Packet_Command) isPacket_Body()         {}

func (m *Packet) GetBody() isPacket_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Packet) GetHeader() *Packet_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Packet) GetIntro() *IntroductionPassive {
	if x, ok := m.GetBody().(*Packet_Intro); ok {
		return x.Intro
	}
	return nil
}

func (m *Packet) GetRouterConfigReq() *RouterConfigurationRequest {
	if x, ok := m.GetBody().(*Packet_RouterConfigReq); ok {
		return x.RouterConfigReq
	}
	return nil
}

func (m *Packet) GetErrorResponse() *GeneralErrorResponse {
	if x, ok := m.GetBody().(*Packet_ErrorResponse); ok {
		return x.ErrorResponse
	}
	return nil
}

func (m *Packet) GetDeviceTransfer() *DeviceTransferPassive {
	if x, ok := m.GetBody().(*Packet_DeviceTransfer); ok {
		return x.DeviceTransfer
	}
	return nil
}

func (m *Packet) GetCommand() *Command {
	if x, ok := m.GetBody().(*Packet_Command); ok {
		return x.Command
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Packet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Packet_OneofMarshaler, _Packet_OneofUnmarshaler, _Packet_OneofSizer, []interface{}{
		(*Packet_Intro)(nil),
		(*Packet_RouterConfigReq)(nil),
		(*Packet_ErrorResponse)(nil),
		(*Packet_DeviceTransfer)(nil),
		(*Packet_Command)(nil),
	}
}

func _Packet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Packet)
	// body
	switch x := m.Body.(type) {
	case *Packet_Intro:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Intro); err != nil {
			return err
		}
	case *Packet_RouterConfigReq:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RouterConfigReq); err != nil {
			return err
		}
	case *Packet_ErrorResponse:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ErrorResponse); err != nil {
			return err
		}
	case *Packet_DeviceTransfer:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeviceTransfer); err != nil {
			return err
		}
	case *Packet_Command:
		b.EncodeVarint(99<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Command); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Packet.Body has unexpected type %T", x)
	}
	return nil
}

func _Packet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Packet)
	switch tag {
	case 2: // body.intro
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IntroductionPassive)
		err := b.DecodeMessage(msg)
		m.Body = &Packet_Intro{msg}
		return true, err
	case 3: // body.routerConfigReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RouterConfigurationRequest)
		err := b.DecodeMessage(msg)
		m.Body = &Packet_RouterConfigReq{msg}
		return true, err
	case 5: // body.errorResponse
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GeneralErrorResponse)
		err := b.DecodeMessage(msg)
		m.Body = &Packet_ErrorResponse{msg}
		return true, err
	case 6: // body.deviceTransfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeviceTransferPassive)
		err := b.DecodeMessage(msg)
		m.Body = &Packet_DeviceTransfer{msg}
		return true, err
	case 99: // body.command
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Command)
		err := b.DecodeMessage(msg)
		m.Body = &Packet_Command{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Packet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Packet)
	// body
	switch x := m.Body.(type) {
	case *Packet_Intro:
		s := proto.Size(x.Intro)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_RouterConfigReq:
		s := proto.Size(x.RouterConfigReq)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_ErrorResponse:
		s := proto.Size(x.ErrorResponse)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_DeviceTransfer:
		s := proto.Size(x.DeviceTransfer)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_Command:
		s := proto.Size(x.Command)
		n += proto.SizeVarint(99<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Begin the header information. This is standard information
// across all packets that is necessary for basic functionality
// and/or routing.
type Packet_Header struct {
	Origin      string             `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Destination string             `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	Id          string             `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Type        Packet_Header_Type `protobuf:"varint,4,opt,name=type,enum=packets.Packet_Header_Type" json:"type,omitempty"`
	Route       []string           `protobuf:"bytes,5,rep,name=route" json:"route,omitempty"`
}

func (m *Packet_Header) Reset()                    { *m = Packet_Header{} }
func (m *Packet_Header) String() string            { return proto.CompactTextString(m) }
func (*Packet_Header) ProtoMessage()               {}
func (*Packet_Header) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type GeneralErrorResponse struct {
	ErrorMessage string `protobuf:"bytes,1,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (m *GeneralErrorResponse) Reset()                    { *m = GeneralErrorResponse{} }
func (m *GeneralErrorResponse) String() string            { return proto.CompactTextString(m) }
func (*GeneralErrorResponse) ProtoMessage()               {}
func (*GeneralErrorResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

// IntroductionPassive is sent immediately upon opening of a socket
// from the server to the client. As this is not a request->response
// packet, it is named Passive to indicate the one-sided nature.
// <br>
type IntroductionPassive struct {
	Setup bool `protobuf:"varint,1,opt,name=setup" json:"setup,omitempty"`
}

func (m *IntroductionPassive) Reset()                    { *m = IntroductionPassive{} }
func (m *IntroductionPassive) String() string            { return proto.CompactTextString(m) }
func (*IntroductionPassive) ProtoMessage()               {}
func (*IntroductionPassive) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

// RouterConfigurationRequest contains the information that needs to be
// configured on the router before it can function as a router.
// <br>
type RouterConfigurationRequest struct {
	Ssid     string `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (m *RouterConfigurationRequest) Reset()                    { *m = RouterConfigurationRequest{} }
func (m *RouterConfigurationRequest) String() string            { return proto.CompactTextString(m) }
func (*RouterConfigurationRequest) ProtoMessage()               {}
func (*RouterConfigurationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

// DeviceTransferPassive notifies definers and phones that a device
// has paired with a new definer.
// <br>
type DeviceTransferPassive struct {
	Device string `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *DeviceTransferPassive) Reset()                    { *m = DeviceTransferPassive{} }
func (m *DeviceTransferPassive) String() string            { return proto.CompactTextString(m) }
func (*DeviceTransferPassive) ProtoMessage()               {}
func (*DeviceTransferPassive) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func init() {
	proto.RegisterType((*Packet)(nil), "packets.Packet")
	proto.RegisterType((*Packet_Header)(nil), "packets.Packet.Header")
	proto.RegisterType((*GeneralErrorResponse)(nil), "packets.GeneralErrorResponse")
	proto.RegisterType((*IntroductionPassive)(nil), "packets.IntroductionPassive")
	proto.RegisterType((*RouterConfigurationRequest)(nil), "packets.RouterConfigurationRequest")
	proto.RegisterType((*DeviceTransferPassive)(nil), "packets.DeviceTransferPassive")
	proto.RegisterEnum("packets.Packet_Header_Type", Packet_Header_Type_name, Packet_Header_Type_value)
}

func init() { proto.RegisterFile("communication.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x4d, 0x52, 0xc7, 0x49, 0x26, 0x25, 0x44, 0xdb, 0x52, 0x59, 0xe1, 0x43, 0x91, 0xb9, 0x44,
	0x02, 0xb9, 0x52, 0xe1, 0xc4, 0x0d, 0x8a, 0x85, 0x7b, 0x80, 0x86, 0x4d, 0xe0, 0xcc, 0xd6, 0x3b,
	0x0d, 0x2b, 0xc8, 0xae, 0xbb, 0x6b, 0x17, 0xe5, 0x27, 0x72, 0xe5, 0x17, 0x21, 0x8f, 0x5d, 0x93,
	0x54, 0xe1, 0xb6, 0x33, 0xef, 0xbd, 0x59, 0xcf, 0x7b, 0x6b, 0x38, 0x4a, 0xcd, 0x7a, 0x5d, 0x68,
	0x95, 0x8a, 0x5c, 0x19, 0x1d, 0x65, 0xd6, 0xe4, 0x86, 0xf5, 0x32, 0x91, 0xfe, 0xc0, 0xdc, 0x4d,
	0x46, 0x25, 0x2a, 0xb4, 0x74, 0x15, 0x10, 0xfe, 0xf1, 0xc0, 0x9f, 0x13, 0xc6, 0x22, 0xf0, 0xbf,
	0xa3, 0x90, 0x68, 0x83, 0xf6, 0xb4, 0x3d, 0x1b, 0x9e, 0x9d, 0x44, 0xb5, 0x28, 0xaa, 0x08, 0x51,
	0x42, 0x28, 0xaf, 0x59, 0xec, 0x35, 0x74, 0x95, 0xce, 0xad, 0x09, 0x3a, 0x44, 0x7f, 0xd2, 0xd0,
	0x2f, 0xca, 0xae, 0x2c, 0xd2, 0xf2, 0xfe, 0xb9, 0x70, 0x4e, 0xdd, 0x62, 0xd2, 0xe2, 0x15, 0x99,
	0x5d, 0xc2, 0x43, 0x6b, 0x8a, 0x1c, 0xed, 0xb9, 0xd1, 0xd7, 0x6a, 0xc5, 0xf1, 0x26, 0x38, 0x20,
	0xfd, 0xf3, 0x46, 0xcf, 0xb7, 0xf0, 0xc2, 0xd2, 0x1a, 0x1c, 0x6f, 0x0a, 0x74, 0x79, 0xd2, 0xe2,
	0xf7, 0xd5, 0x2c, 0x86, 0x07, 0x68, 0xad, 0xb1, 0x1c, 0x5d, 0x66, 0xb4, 0xc3, 0xa0, 0x4b, 0xe3,
	0x9e, 0x36, 0xe3, 0x3e, 0xa0, 0x46, 0x2b, 0x7e, 0xc6, 0xdb, 0xa4, 0xa4, 0xc5, 0x77, 0x55, 0x2c,
	0x81, 0x91, 0xc4, 0x5b, 0x95, 0xe2, 0xd2, 0x0a, 0xed, 0xae, 0xd1, 0x06, 0x3e, 0xcd, 0x79, 0xd6,
	0xcc, 0x79, 0xbf, 0x03, 0xff, 0x5b, 0xec, 0x9e, 0x8e, 0xbd, 0x84, 0x5e, 0x6d, 0x72, 0x90, 0xd2,
	0x88, 0x71, 0x33, 0xe2, 0xbc, 0xea, 0x27, 0x2d, 0x7e, 0x47, 0x99, 0xfc, 0x6e, 0x83, 0x5f, 0x19,
	0xcb, 0x4e, 0xc0, 0x37, 0x56, 0xad, 0x94, 0xa6, 0x00, 0x06, 0xbc, 0xae, 0xd8, 0x14, 0x86, 0x12,
	0x5d, 0xae, 0x34, 0x59, 0x41, 0x76, 0x0f, 0xf8, 0x76, 0x8b, 0x8d, 0xa0, 0xa3, 0x24, 0xf9, 0x38,
	0xe0, 0x1d, 0x25, 0xd9, 0x29, 0x78, 0xf9, 0x26, 0xc3, 0xc0, 0x9b, 0xb6, 0x67, 0xa3, 0xb3, 0xc7,
	0xfb, 0x83, 0x8c, 0x96, 0x9b, 0x0c, 0x39, 0x11, 0xd9, 0x31, 0x74, 0xc9, 0xd7, 0xa0, 0x3b, 0x3d,
	0x98, 0x0d, 0x78, 0x55, 0x84, 0x11, 0x78, 0x25, 0x87, 0x0d, 0xa1, 0xc7, 0xe3, 0xcf, 0x5f, 0xe2,
	0xc5, 0x72, 0xdc, 0x62, 0x87, 0xd0, 0xe7, 0xf1, 0x62, 0x7e, 0xf9, 0x69, 0x11, 0x8f, 0xdb, 0x25,
	0x34, 0x7f, 0xbb, 0x58, 0x5c, 0x7c, 0x8d, 0xc7, 0x9d, 0x77, 0x3e, 0x78, 0x57, 0x46, 0x6e, 0xc2,
	0x37, 0x70, 0xbc, 0xcf, 0x74, 0x16, 0xc2, 0x21, 0x99, 0xfe, 0x11, 0x9d, 0x13, 0x2b, 0xac, 0xd7,
	0xdc, 0xe9, 0x85, 0x2f, 0xe0, 0x68, 0xcf, 0xfb, 0x29, 0x3f, 0xd0, 0x61, 0x5e, 0x64, 0xa4, 0xe9,
	0xf3, 0xaa, 0x08, 0xbf, 0xc1, 0xe4, 0xff, 0x8f, 0x85, 0x31, 0xf0, 0x9c, 0x53, 0xb2, 0xbe, 0x86,
	0xce, 0x6c, 0x02, 0xfd, 0x4c, 0x38, 0xf7, 0xcb, 0x58, 0x59, 0x1b, 0xd9, 0xd4, 0x25, 0x5f, 0x8b,
	0x35, 0xd6, 0x3e, 0xd2, 0x39, 0x3c, 0x85, 0x47, 0x7b, 0x73, 0x2f, 0xc3, 0xaa, 0x72, 0xbf, 0x0b,
	0xab, 0xaa, 0xae, 0x7c, 0xfa, 0xaf, 0x5e, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x3b, 0x51, 0x06,
	0xf3, 0x87, 0x03, 0x00, 0x00,
}
